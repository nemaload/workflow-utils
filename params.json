{"name":"NEMALOAD workflow-utils","tagline":"Various utilities to expedite the project workflow","body":"# Workflow Utilities\r\nThis repository stores a number of tools to help facilitate *NEMALOAD*'s workflow. See below for details of each tool.\r\n\r\n## tiff2hdf\r\n\r\nThis tool takes 16-bit grayscale images or image stacks in the **TIFF** format and converts them into **HDF5** datasets with associated metadata. It supports a number of features, such as:\r\n\r\n* Single image or batch processing modes\r\n\r\n* Automatic optic metadata writing\r\n\r\n* Image conversion safety checks\r\n\r\n### Technical Implementation\r\nThis tool is written in Python, and leverages the ImageMagick library, written in **C**. \r\n\r\n### Dependencies\r\n* **ImageMagick**\r\n* **Python** 2.6+\r\n* **Wand**(ctypes-based **Python ImageMagick** binding)\r\n* **H5py Python** library\r\n\r\n### User Guide\r\n```\r\nusage: tiff2hdf.py [-h] [-s] [-o] [-p PARAMETERS] [-l] input output\r\n\r\nA tool to convert TIFF files to HDF5 datasets.\r\n\r\npositional arguments:\r\n  input                 The input directory to be converted. This can also be\r\n                        a filename in the case that the -s flag is set.\r\n  output                The directory to which the file should be output. This\r\n                        can also be a filename in the case that the -s flag is\r\n                        set.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -s, --single          Converts a single image.\r\n  -o, --overwrite       Overwrite all existing HDF5 files in directory.\r\n  -p PARAMETERS, --parameters PARAMETERS\r\n                        Specify the location of an LFDisplay-formatted optical\r\n                        parameter text file\r\n  -l, --lightsheet      Specifies the input images are light-sheet images\r\n\r\n```\r\n\r\n## autorectify-independent\r\nThis tool analyzes microlens array images and computes parameters describing the size, spacing, and location of lenses. It takes an HDF5 file as input, and then outputs another HDF5 file with autorectification metadata.\r\n\r\n### Technical Implementation\r\nautorectify-independent is written in Python. It was originally written to be a component of LFDisplay, but has been modified to function as a command line tool.\r\n### Dependencies\r\n* **numpy** library\r\n* **OpenCV** Python bindings\r\n* **Matplotlib** \r\n* **h5py** library\r\n\r\n\r\n### User Guide\r\n```\r\nusage: autorectify-independent.py [-h] [-v] [-p PERCENT] [-o OUTPUT] input\r\n\r\nA command-line tool to calculate lenslet rectifications\r\n\r\npositional arguments:\r\n  input                 The input file(HDF5).\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -v, --verbose         Verbose mode\r\n  -p PERCENT, --percent PERCENT\r\n                        The percentage of images to be processed for a sample\r\n                        in a multi image dataset\r\n  -o OUTPUT, --output OUTPUT\r\n                        The filename or path of the output file(must have HDF5\r\n                        extension, not exist)\r\n\r\n```\r\n## autorectify-accelerated\r\n\r\nThis tool is under development, and is a concurrent Go port of autorectify. It is not functional at the moment, as priority has shifted to other tasks.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}